plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.example.composerecipeapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.0-beta01'
        kotlinCompilerVersion "1.4.30"

    }

    buildFeatures {
        compose true
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    def compose = "1.0.0-beta01"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.ui:ui-tooling:$compose"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.runtime:runtime-livedata:$compose"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose"

    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.material:material-icons-core:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"
    implementation "androidx.compose.compiler:compiler:$compose"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha03"
    implementation "androidx.compose.animation:animation:$compose"
    implementation "androidx.compose.foundation:foundation-layout:$compose"
    implementation "androidx.compose.runtime:runtime:$compose"
    implementation "androidx.compose.ui:ui-util:$compose"


    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.3.0-alpha03'
//    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha02'
//    // Integration with observables


    implementation "androidx.fragment:fragment-ktx:1.2.5"

    implementation "androidx.navigation:navigation-runtime-ktx:2.3.2"
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.2"


    def retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"


    def glide = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    def hilt = "2.28-alpha"
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"

    def hilt_lifecycle_viewmodel = "1.0.0-alpha01"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel"
    kapt "androidx.hilt:hilt-compiler:$hilt_lifecycle_viewmodel"

}


//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
//    kotlinOptions {
//        // Treat all Kotlin warnings as errors
////        allWarningsAsErrors = true
////        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
////         Enable experimental coroutines APIs, including Flow
////        freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
//
//        // Set JVM target to 1.8
//        jvmTarget = "1.8"
//    }
//}

